% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duckdb.R
\name{get_con_duckdb}
\alias{get_con_duckdb}
\title{Duckdb Database Connection}
\usage{
get_con_duckdb(
  dbdir = ":memory:",
  debug = getOption("duckdb.debug", FALSE),
  read_only = FALSE,
  timezone_out = "UTC",
  tz_out_convert = c("with", "force"),
  config = list(),
  bigint = "numeric",
  minSize = 1,
  maxSize = Inf,
  idleTimeout = 60,
  validationInterval = 60,
  state = NULL
)
}
\arguments{
\item{dbdir}{Location for database files. Should be a path to an existing
directory in the file system. With the default (or \code{""}), all
data is kept in RAM.}

\item{debug}{Print additional debug information, such as queries.}

\item{read_only}{Set to \code{TRUE} for read-only operation.
For file-based databases, this is only applied when the database file is opened for the first time.
Subsequent connections (via the same \code{drv} object or a \code{drv} object pointing to the same path)
will silently ignore this flag.}

\item{timezone_out}{The time zone returned to R, defaults to \code{"UTC"}, which
is currently the only timezone supported by duckdb.
If you want to display datetime values in the local timezone,
set to \code{\link[=Sys.timezone]{Sys.timezone()}} or \code{""}.}

\item{tz_out_convert}{How to convert timestamp columns to the timezone specified
in \code{timezone_out}. There are two options: \code{"with"}, and \code{"force"}. If \code{"with"}
is chosen, the timestamp will be returned as it would appear in the specified time zone.
If \code{"force"} is chosen, the timestamp will have the same clock
time as the timestamp in the database, but with the new time zone.}

\item{config}{Named list with DuckDB configuration flags, see
\url{https://duckdb.org/docs/configuration/overview#configuration-reference} for the possible options.
These flags are only applied when the database object is instantiated.
Subsequent connections will silently ignore these flags.}

\item{bigint}{How 64-bit integers should be returned. There are two options: \code{"numeric"} and \code{"integer64"}.
If \code{"numeric"} is selected, bigint integers will be treated as double/numeric.
If \code{"integer64"} is selected, bigint integers will be set to bit64 encoding.}

\item{minSize, maxSize}{The minimum and maximum number of objects in the pool.}

\item{idleTimeout}{Number of seconds to wait before destroying idle objects
(i.e. objects available for checkout over and above \code{minSize}).}

\item{validationInterval}{Number of seconds to wait between validating
objects that are available for checkout. These objects are validated
in the background to keep them alive.

To force objects to be validated on every checkout, set
\code{validationInterval = 0}.}

\item{state}{A \code{pool} public variable to be used by backend authors.}
}
\value{
A database connection \link[pool:Pool-class]{pool::Pool} to the specified duckdb instance
}
\description{
Create a connection pool to a duckdb database instance
}
