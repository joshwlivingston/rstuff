[{"path":"https://joshwlivingston.github.io/rstuff/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 rstuff authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://joshwlivingston.github.io/rstuff/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josh Livingston. Author, maintainer.","code":""},{"path":"https://joshwlivingston.github.io/rstuff/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Livingston J (2025). rstuff: Stuff R. R package version 1.0, https://joshwlivingston.github.io/rstuff/, https://github.com/joshwlivingston/rstuff.","code":"@Manual{,   title = {rstuff: My Stuff For R},   author = {Josh Livingston},   year = {2025},   note = {R package version 1.0,     https://joshwlivingston.github.io/rstuff/},   url = {https://github.com/joshwlivingston/rstuff}, }"},{"path":"https://joshwlivingston.github.io/rstuff/index.html","id":"rstuff","dir":"","previous_headings":"","what":"My Stuff For R","title":"My Stuff For R","text":"rstuff collection stuff use day--day R work.","code":""},{"path":"https://joshwlivingston.github.io/rstuff/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"My Stuff For R","text":"can install package directly Github:","code":"# install.packages(\"pak\") # pak::pak(\"devtools\") devtools::install_github(\"joshwlivingston/rstuff\")"},{"path":"https://joshwlivingston.github.io/rstuff/index.html","id":"formatting","dir":"","previous_headings":"","what":"Formatting","title":"My Stuff For R","text":"package uses air, R formatter language server available extension vscode positron. IDE extension pickup settings specified .vscode/settings.json air.toml","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/class-length-checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Function class and length checks — class-length-checks","title":"Function class and length checks — class-length-checks","text":"Often R package development, need arises verify values specific class length, null's allowed conditionally. collection functions.","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/class-length-checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function class and length checks — class-length-checks","text":"","code":"check_logical_length_one(x)  check_character_length_one(x)  check_null_or_character_length_one(x)"},{"path":"https://joshwlivingston.github.io/rstuff/reference/class-length-checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function class and length checks — class-length-checks","text":"x value checked","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/class-length-checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function class and length checks — class-length-checks","text":"TRUE, invisibly, check succeeds","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/class-length-checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function class and length checks — class-length-checks","text":"","code":"# logical: length-one check_logical_length_one(TRUE)  try(check_logical_length_one(rep(FALSE, 2))) #> Error in eval(expr, envir) :  #>   is.logical(rep(FALSE, 2)) && length(rep(FALSE, 2)) == 1 must be TRUE  try(check_logical_length_one(\"TRUE\")) #> Error in eval(expr, envir) :  #>   is.logical(\"TRUE\") && length(\"TRUE\") == 1 must be TRUE   # character: length-one check_character_length_one(\"x\")  try(check_character_length_one(NULL)) #> Error in eval(expr, envir) :  #>   is.character(NULL) && length(NULL) == 1 must be TRUE   # character: NULL or length-one check_null_or_character_length_one(\"x\") check_null_or_character_length_one(NULL)  try(check_null_or_character_length_one(TRUE)) #> Error in check_null_or_character_length_one(TRUE) :  #>   Since x is not NULL, f(x) && length(x) == 1 must be TRUE"},{"path":"https://joshwlivingston.github.io/rstuff/reference/create_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a New R Project — create_project","title":"Create a New R Project — create_project","text":"Creates new R project basic structure configurations development, version control, optional GitHub/pkgdown integration.","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/create_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a New R Project — create_project","text":"","code":"create_project(   dir,   package_title = NULL,   package_description = NULL,   package_license = NULL,   package_version = NULL,   github_use = TRUE,   github_pkgdown = TRUE,   github_private = FALSE,   open = TRUE )"},{"path":"https://joshwlivingston.github.io/rstuff/reference/create_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a New R Project — create_project","text":"dir character string specifying name directory create project . directory also used package name. package_title Optional title package, automatically capitalized provided. package_description Optional description package. package_license Optional license package, defaults MIT specified. specified, proprietary license using provided package_license used. package_version Optional version number package, e.g. \"0.1.0\". github_use Logical indicating whether create new GitHub repository link project. Defaults TRUE. github_pkgdown Logical indicating whether set GitHub Pages pkgdown documentation. Requires github_use TRUE. github_private Logical indicating whether created repository private GitHub. applicable github_use TRUE. open Logical indicating whether open newly created project RStudio (requires rstudioapi). Defaults TRUE.","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/create_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a New R Project — create_project","text":"path newly created project directory fs_path object.","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/get_con_duckdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Duckdb Database Connection — get_con_duckdb","title":"Duckdb Database Connection — get_con_duckdb","text":"Create connection pool duckdb database instance","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/get_con_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duckdb Database Connection — get_con_duckdb","text":"","code":"get_con_duckdb(   dbdir = \":memory:\",   debug = getOption(\"duckdb.debug\", FALSE),   read_only = FALSE,   timezone_out = \"UTC\",   tz_out_convert = c(\"with\", \"force\"),   config = list(),   bigint = \"numeric\",   minSize = 1,   maxSize = Inf,   idleTimeout = 60,   validationInterval = 60,   state = NULL )"},{"path":"https://joshwlivingston.github.io/rstuff/reference/get_con_duckdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duckdb Database Connection — get_con_duckdb","text":"dbdir Location database files. path existing directory file system. default (\"\"), data kept RAM. debug Print additional debug information, queries. read_only Set TRUE read-operation. file-based databases, applied database file opened first time. Subsequent connections (via drv object drv object pointing path) silently ignore flag. timezone_out time zone returned R, defaults \"UTC\", currently timezone supported duckdb. want display datetime values local timezone, set Sys.timezone() \"\". tz_out_convert convert timestamp columns timezone specified timezone_out. two options: \"\", \"force\". \"\" chosen, timestamp returned appear specified time zone. \"force\" chosen, timestamp clock time timestamp database, new time zone. config Named list DuckDB configuration flags, see https://duckdb.org/docs/configuration/overview#configuration-reference possible options. flags applied database object instantiated. Subsequent connections silently ignore flags. bigint 64-bit integers returned. two options: \"numeric\" \"integer64\". \"numeric\" selected, bigint integers treated double/numeric. \"integer64\" selected, bigint integers set bit64 encoding. minSize, maxSize minimum maximum number objects pool. idleTimeout Number seconds wait destroying idle objects (.e. objects available checkout minSize). validationInterval Number seconds wait validating objects available checkout. objects validated background keep alive. force objects validated every checkout, set validationInterval = 0. state pool public variable used backend authors.","code":""},{"path":"https://joshwlivingston.github.io/rstuff/reference/get_con_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duckdb Database Connection — get_con_duckdb","text":"database connection pool::Pool specified duckdb instance","code":""}]
